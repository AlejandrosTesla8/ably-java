plugins {
    id 'checkstyle'
    id 'org.gradle.test-retry' version '1.2.0'
}

apply plugin: 'java-library'
apply plugin: 'idea'
apply from: 'publish.gradle'

sourceCompatibility = 1.7
targetCompatibility = 1.7

// Default jar: add io.ably classes from :lib dependency.
jar {
    baseName = 'ably-java'
    from {
        configurations.compile.collect { file ->
            file.directory ? file : zipTree(file)
        }
    }
    includes = ['**/io/ably/**']
    includeEmptyDirs false
    exclude 'META-INF/**'
}

// fullJar: add all classes from dependencies transitively.
task fullJar(type: Jar) {
    baseName = 'ably-java'
    classifier = 'full'
    from {
        configurations.compile.collect { file ->
            file.directory ? file : zipTree(file)
        }
    }
    with jar
    exclude 'META-INF/**'
}

dependencies {
    implementation project(':lib')
    // Enable access to test classes from the :lib module for integration test cases sharing
    testImplementation project(path: ':lib', configuration: 'sharedTestClasses')
}

assemble.dependsOn fullJar
publish.dependsOn checkstyleMain

configurations {
    fullConfiguration
    testsConfiguration
}

artifacts {
    fullConfiguration fullJar
}

task testRealtimeSuite(type: Test) {
    filter {
        includeTestsMatching '*RealtimeSuite'
    }
    beforeTest { descriptor ->
        logger.lifecycle("-> $descriptor")
    }
    outputs.upToDateWhen { false }
    testLogging.exceptionFormat = 'full'
    retry {
        maxRetries = 3
        maxFailures = 4
    }
}

task testRestSuite(type: Test) {
    filter {
        includeTestsMatching '*RestSuite'
    }
    beforeTest { descriptor ->
        logger.lifecycle("-> $descriptor")
    }
    outputs.upToDateWhen { false }
    testLogging.exceptionFormat = 'full'
    retry {
        maxRetries = 3
        maxFailures = 4
    }
}
